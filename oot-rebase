#! /bin/bash
# Rebase a branch outside of the working tree
# The work is done in a temporary repository

tempdir=/tmp/oot-rebase-$$
sourcerepo=$(git rev-parse --show-toplevel)
branch=$1
shift
upstream=$1
shift

if [ "$branch" == "" ]; then
    echo "Out-of-tree rebase"
    echo "    Usage: $0 <branch> [<upstream> <options>]"
    echo "    Rebases <branch> on <upstream> outside of the working tree, passing <options> to git-rebase(1)"
    echo "    <upstream> defaults to origin/master (but must be specified if options are given)"
    echo "    Doesn't work on the current HEAD branch."
    echo "    If the rebase is not successful, does nothing."
    exit
fi
if [ "$upstream" == "" ]; then
    upstream=origin/master
fi

if [ $(git merge-base $upstream $branch) = $(git rev-parse $upstream) ]; then
    echo Already merged
    exit
fi

echo Rebasing $branch to $upstream

echo setup temporary directory...
mkdir $tempdir
cd $tempdir

echo initialize Git repo in temp directory...
git init && \
echo "Set up alternates so we don't need to copy git objects"... && \
echo $sourcerepo/.git/objects > .git/objects/info/alternates && \
echo Fetch our two branches... && \
git fetch -n $sourcerepo $branch:$branch $upstream:$upstream && \
echo Check out the working tree... && \
git checkout $branch && \
echo Do the rebase... && \
git rebase $upstream "$@" && \
echo Push back to our repo... && \
git push -f $sourcerepo $branch:$branch && \
echo done

echo remove tempdir...
rm -rf $tempdir
